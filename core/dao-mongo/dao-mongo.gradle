dependencies {
    implementation project(':common:id')
    implementation project(':common:jackson')
    implementation project(':core:dao')
    implementation project(':core:domain')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.mongodb:mongodb-driver'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework:spring-context'

    testImplementation project(':core:domain-test-support')
    testImplementation project(':core:dao-mongo-test-support')

    testImplementation 'commons-logging:commons-logging'
    testImplementation 'com.google.guava:guava'
    testImplementation 'org.yaml:snakeyaml'
    testImplementation 'javax.validation:validation-api'
    testImplementation 'org.hibernate:hibernate-validator'
    testImplementation 'org.jboss.logging:jboss-logging'
    testImplementation 'com.fasterxml:classmate:1.3.3'

    testImplementation 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    testImplementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.springframework:spring-test'
    // this was test:common
    testImplementation 'net.bytebuddy:byte-buddy'
    testImplementation 'org.hamcrest:hamcrest-core'
    testImplementation 'org.hamcrest:hamcrest-library'
    testImplementation 'junit:junit'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'net.bytebuddy:byte-buddy'
    testImplementation 'org.objenesis:objenesis:2.5.1'
    // this was test:common - end
}

distributions {
    main {
        contents {
            from("${project.projectDir}/src/main/resources") {
                into('scripts')
            }
        }
    }
}

task createUsersAndRoles(dependsOn: installDist) {
    doLast {
        FileTree listOfScripts = fileTree(dir: "${project.projectDir}/build/install/dao-mongo", include: "**/*.sh")
        listOfScripts.sort().each { file ->
            println "Executing script: $file"
            exec {
                commandLine file
            }    
        }
    }
}
